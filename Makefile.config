# This is part of a GNU -*- Makefile -*-, to specify system-dependent 
# parts of the Makefile enviroment.
#
# This gets included as part of the GNU-Makefile used in each of 
# the subdirectories.
#
# Depending on your platform, you need to select the correct definition.
# Also, you need to edit the Makefile in the bin subdirectory.

LPR  = lpr
A2PS = a2ps -C --center-title='$$f' --footer="Nachos"
DOXYGEN = doxygen

CFG = i386-irisa-linux
#CFG = i386-irisa-mac64
#CFG = i386-irisa-mac32
#CFG = i386-istic

################################################
### i386-istic Host
################################################
ifeq ($(CFG),i386-istic)

## Kernel compilation toolchain
HOST_CPP = cpp
HOST_AS  = gcc
HOST_GCC = gcc
HOST_GXX = g++
HOST_ASFLAGS = -P -D_ASM $(HOST_CPPFLAGS)
HOST_CPPFLAGS = -D_REENTRANT -DETUDIANTS_TP
HOST_CFLAGS = -g -Wall -Wshadow $(HOST_CPPFLAGS)
HOST_LDFLAGS = 

## MIPS target compilation toolchain
MIPS_PREFIX=/share/m1info/cross-mips/bin/
MIPS_AS = $(MIPS_PREFIX)mips-gcc -x assembler-with-cpp
MIPS_GCC = $(MIPS_PREFIX)mips-gcc
MIPS_LD = $(MIPS_PREFIX)mips-ld
MIPS_ASFLAGS = $(MIPS_CPPFLAGS) -G0
MIPS_CPPFLAGS = #nil
MIPS_CFLAGS = -Wall -G0 $(MIPS_CPPFLAGS)
MIPS_LDFLAGS = #nil

endif

################################################
### i386-irisa-mac Host
################################################
ifeq ($(CFG),i386-irisa-mac32)

## Kernel compilation toolchain
HOST_CPP = cpp
HOST_AS  = gcc
HOST_GCC = gcc
HOST_GXX = g++
HOST_ASFLAGS = -P -D_ASM $(HOST_CPPFLAGS)
HOST_CPPFLAGS = -D_REENTRANT -D_XOPEN_SOURCE
HOST_CFLAGS = -g -Wall -Wshadow $(HOST_CPPFLAGS)
HOST_LDFLAGS = #nil

## RISC-V target compilation toolchain
RISCV_PREFIX=/opt/riscv/bin/
RISCV_AS = $(RISCV_PREFIX)riscv32-unknown-elf-gcc -x assembler-with-cpp
RISCV_GCC = $(RISCV_PREFIX)riscv32-unknown-elf-gcc
RISCV_LD = $(RISCV_PREFIX)riscv32-unknown-elf-ld
RISCV_ASFLAGS = $(RISCV_CPPFLAGS)
RISCV_CPPFLAGS = #nil
RISCV_CFLAGS = -Wall $(RISCV_CPPFLAGS)
# rv64imfd
# --------
# rv64i = base instruction set 64 bit
# m standard extension for integer multiplication and division (8 instr)
# f standard extension for single-precision fp (25 instr)
# d standard extension for double-precision fp (25 instr)
# Doc abi
# -------
RISCV_LDFLAGS = #nil

endif

################################################
### i386-irisa-mac Host
################################################
ifeq ($(CFG),i386-irisa-mac64)

## Kernel compilation toolchain
HOST_CPP = cpp
HOST_AS  = gcc
HOST_GCC = gcc
HOST_GXX = g++
HOST_ASFLAGS = -P -D_ASM $(HOST_CPPFLAGS)
HOST_CPPFLAGS = -D_REENTRANT -D_XOPEN_SOURCE
HOST_CFLAGS = -g -Wall -Wshadow $(HOST_CPPFLAGS)
HOST_LDFLAGS = #nil

## RISC-V target compilation toolchain
RISCV_PREFIX=/usr/local/bin/
RISCV_AS = $(RISCV_PREFIX)riscv64-unknown-elf-gcc -x assembler-with-cpp -march=rv64imfd
RISCV_GCC = $(RISCV_PREFIX)riscv64-unknown-elf-gcc
RISCV_LD = $(RISCV_PREFIX)riscv64-unknown-elf-ld
RISCV_ASFLAGS = $(RISCV_CPPFLAGS)
RISCV_CPPFLAGS = #nil
RISCV_CFLAGS = -Wall $(RISCV_CPPFLAGS) -march=rv64imfd
# rv64imfd
# --------
# rv64i = base instruction set 64 bit
# m standard extension for integer multiplication and division (8 instr)
# f standard extension for single-precision fp (25 instr)
# d standard extension for double-precision fp (25 instr)
# Doc abi
# -------
RISCV_LDFLAGS = #nil

endif

################################################
### i386-irisa-linux Host
################################################
ifeq ($(CFG),i386-irisa-linux)

## Kernel compilation toolchain
HOST_CPP = cpp
HOST_AS  = gcc
HOST_GCC = gcc
HOST_GXX = g++
HOST_ASFLAGS = -P -D_ASM $(HOST_CPPFLAGS)
HOST_CPPFLAGS = -D_REENTRANT
HOST_CFLAGS = -g -Wall -Wshadow $(HOST_CPPFLAGS)
HOST_LDFLAGS = 

## MIPS target compilation toolchain
# RISCV_PREFIX=/usr/bin/
RISCV_PREFIX=/usr/bin/
RISCV_AS = $(RISCV_PREFIX)riscv64-unknown-elf-gcc -x assembler-with-cpp -march=rv64imfd
RISCV_GCC = $(RISCV_PREFIX)riscv64-unknown-elf-gcc
RISCV_LD = $(RISCV_PREFIX)riscv64-unknown-elf-ld
RISCV_ASFLAGS = $(RISCV_CPPFLAGS)
RISCV_CPPFLAGS = #nil
# FT15Feb24: adding -ffreestanding following https://unix.stackexchange.com/questions/669143/stdint-h-no-such-file-or-directory
RISCV_CFLAGS = -Wall $(RISCV_CPPFLAGS) -march=rv64imfd -ffreestanding
RISCV_LDFLAGS = #nil
endif
